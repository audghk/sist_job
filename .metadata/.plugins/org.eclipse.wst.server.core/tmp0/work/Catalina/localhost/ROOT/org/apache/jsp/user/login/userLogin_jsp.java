/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.86
 * Generated at: 2024-05-17 00:14:24 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.user.login;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class userLogin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  public java.lang.String getServletInfo() {
    return "";
  }

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../../assets/jsp/user/lib.jsp", out, false);
      out.write("\n");
      out.write("	<!-- golgolz start -->\n");
      out.write("	<!-- golgolz end -->\n");
      out.write("	\n");
      out.write("<style type=\"text/css\">\n");
      out.write("</style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../../assets/jsp/user/header.jsp", out, false);
      out.write("\n");
      out.write("	<div id=\"wrap\">\n");
      out.write("		<div id=\"main\">\n");
      out.write("			<!-- golgolz start -->\n");
      out.write("			<div id=\"loginFrm\">\n");
      out.write("    <div id=\"container\">\n");
      out.write("		<div id=\"contents\">\n");
      out.write("		\n");
      out.write("<div class=\"path\">\n");
      out.write("    <span>현재 위치</span>\n");
      out.write("    <ol><li><a href=\"/\">홈</a></li>\n");
      out.write("        <li title=\"현재 위치\"><strong>로그인</strong></li>\n");
      out.write("    </ol></div>\n");
      out.write("\n");
      out.write("<form id=\"loginForm\" name=\"loginForm\" action=\"user_login_process.jsp\" method=\"post\" >\n");
      out.write("    <div class=\"xans-element- xans-member xans-member-login\">\n");
      out.write("        <div class=\"login\">\n");
      out.write("            <h3>MEMBER LOGIN</h3>\n");
      out.write("            <p class=\"sub_txt\">\n");
      out.write("                쇼핑몰의 회원이 되시면 다양한 혜택을 누리실 수 있습니다.\n");
      out.write("            </p>\n");
      out.write("\n");
      out.write("             <fieldset>\n");
      out.write("                <legend>회원로그인</legend>\n");
      out.write("                <label class=\"id\"><span>아이디</span>\n");
      out.write("                    <input id=\"member_id\" name=\"member_id\" fw-filter=\"isFill\" fw-label=\"아이디\" fw-msg=\"\" class=\"inputTypeText\" placeholder=\"\" value=\"\" type=\"text\">\n");
      out.write("                </label>\n");
      out.write("                <label class=\"password\"><span>비밀번호</span>\n");
      out.write("                    <input id=\"member_passwd\" name=\"member_passwd\" fw-filter=\"isFill&amp;isMin[4]&amp;isMax[16]\" fw-label=\"패스워드\" fw-msg=\"\" autocomplete=\"off\" value=\"\" type=\"password\">\n");
      out.write("                </label>\n");
      out.write(" 					<a href=\"javascript:void(0)\" class=\"btn_login\">로그인</a>\n");
      out.write("                \n");
      out.write("                \n");
      out.write("                <div class=\"find_area\">\n");
      out.write("                    <ul>\n");
      out.write("                        <li><a href=\"../findIdPw/findId.jsp\">아이디찾기</a></li>\n");
      out.write("                        <li>&nbsp;|&nbsp;</li>\n");
      out.write("                        <li><a href=\"../findIdPw/findPw.jsp\">비밀번호찾기</a></li>\n");
      out.write("                    </ul>\n");
      out.write("                </div>\n");
      out.write("            </fieldset>\n");
      out.write("        </div>\n");
      out.write("        \n");
      out.write("        <!-- 회원가입 섹션 -->\n");
      out.write("         <div class=\"join_area\">\n");
      out.write("            <div class=\"join\">\n");
      out.write("                <div class=\"join_title\">회원가입</div>\n");
      out.write("                아직 회원이 아니십니까?<br>회원을 위한 다양한 혜택이 준비되어 있습니다.\n");
      out.write("            </div>\n");
      out.write("            <!-- 회원가입 버튼의 디자인 개선 -->\n");
      out.write("            <div class=\"join_btn\">\n");
      out.write("                <a href=\"../signUp/signUp.jsp\" class=\"join_btn_link\">회원가입</a>\n");
      out.write("            </div>\n");
      out.write("    </div>\n");
      out.write("    </div>\n");
      out.write("</form>\n");
      out.write("\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("    <hr class=\"layout\"><div id=\"banner\"></div>\n");
      out.write("<div id=\"quick\"></div>\n");
      out.write("</div>\n");
      out.write("			\n");
      out.write("			<!-- golgolz end -->\n");
      out.write("		</div>\n");
      out.write("	</div>\n");
      out.write("	<script>\n");
      out.write("        document.addEventListener('DOMContentLoaded', function() {\n");
      out.write("            var loginButton = document.querySelector('.btn_login');\n");
      out.write("            loginButton.addEventListener('click', function(event) {\n");
      out.write("                console.log('Form submitted');\n");
      out.write("                var form = document.getElementById('loginForm');\n");
      out.write("                form.submit();\n");
      out.write("                event.preventDefault();\n");
      out.write("            });\n");
      out.write("        });\n");
      out.write("    </script> \n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
