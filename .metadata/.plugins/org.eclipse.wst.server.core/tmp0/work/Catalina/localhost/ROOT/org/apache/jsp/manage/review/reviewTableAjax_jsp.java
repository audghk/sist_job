/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.86
 * Generated at: 2024-05-16 15:28:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.manage.review;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import admin.review.ReviewBoardUtil;
import java.text.SimpleDateFormat;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import admin.review.ReviewBoardVO;
import java.util.List;
import admin.review.AdminReviewDAO;
import java.io.PrintWriter;

public final class reviewTableAjax_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  public java.lang.String getServletInfo() {
    return "JSON";
  }

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/standard.jar", Long.valueOf(1715869714055L));
    _jspx_dependants.put("jar:file:/C:/dev/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/online-shop/WEB-INF/lib/standard.jar!/META-INF/c.tld", Long.valueOf(1098678690000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(8);
    _jspx_imports_classes.add("java.io.PrintWriter");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("org.json.simple.JSONObject");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("admin.review.ReviewBoardVO");
    _jspx_imports_classes.add("admin.review.ReviewBoardUtil");
    _jspx_imports_classes.add("org.json.simple.JSONArray");
    _jspx_imports_classes.add("admin.review.AdminReviewDAO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      admin.review.SearchVO sVO = null;
      sVO = (admin.review.SearchVO) _jspx_page_context.getAttribute("sVO", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (sVO == null){
        sVO = new admin.review.SearchVO();
        _jspx_page_context.setAttribute("sVO", sVO, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.introspect(_jspx_page_context.findAttribute("sVO"), request);
      out.write('\r');
      out.write('\n');


ReviewBoardUtil util = ReviewBoardUtil.getInstance();

String selectOptionParam = request.getParameter("selectOption");
int pageScale = 10; // 기본 페이지 스케일 값
pageScale = Integer.parseInt(selectOptionParam);

AdminReviewDAO rDAO=AdminReviewDAO.getInstance();
//1.총 레코드 수 얻기
int totalCount = rDAO.selectTotalCount(sVO);

//2.한 화면에 보여줄 게시물의 수
//3.총 페이지 수
int totalPage=(int)Math.ceil((double)totalCount/pageScale);
//4.게시물의 시작번호
String tempPage=sVO.getCurrentPage();
int currentPage=1;
if(tempPage !=null) {
    try{
    currentPage=Integer.parseInt(tempPage);
    }catch(NumberFormatException nfe){
    }
}//end if
int startNum=currentPage *pageScale-pageScale+1;
//5.게시물의 끝 번호
int endNum=startNum+pageScale-1;

sVO.setStartNum(startNum);
sVO.setEndNum(endNum);
AdminReviewDAO arDAO = AdminReviewDAO.getInstance();
//여기서는 데이터베이스 조회 결과인 list를 사용하여 tbody 내용을 구성합니다.
List<ReviewBoardVO> list = arDAO.selectReviewBoard(sVO);
//list는 ReviewBoardVO 객체들의 리스트로 가정합니다.

JSONObject jsonObj = new JSONObject();
JSONArray jsonArr = new JSONArray();
JSONObject jsonTemp = null;
SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
String date = "";

try{
  for(int i=0 ; i<list.size(); i++){
    ReviewBoardVO rbVO = list.get(i);
    date = sdf.format(rbVO.getInputDate());
    jsonTemp = new JSONObject();
    jsonTemp.put("reviewId",rbVO.getReviewId());
    jsonTemp.put("defaultImg",rbVO.getDefaultImg());
    jsonTemp.put("name",rbVO.getName());
    jsonTemp.put("title",rbVO.getTitle());
    jsonTemp.put("inputDate",date);
    jsonTemp.put("id",rbVO.getId());
    
    jsonArr.add(jsonTemp);
  }
  
  jsonObj.put("status", "SUCCESS" );
  jsonObj.put("boardList",jsonArr );
  jsonObj.put("totalPage", totalPage);
  jsonObj.put("currentPage", currentPage);
}catch(Exception e){
  e.printStackTrace();
}

      out.write('\r');
      out.write('\n');
      out.print(jsonObj.toJSONString() );
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("    var paginationHTML = \"");
      out.print( util.pageNation("review_board_list.jsp", "", totalPage, currentPage) );
      out.write("\";\r\n");
      out.write("</script>\r\n");
      out.write(" ");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
