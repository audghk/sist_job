/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.86
 * Generated at: 2024-05-17 01:32:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.goods;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import user.review.UserReviewDAO;
import util.PageController;
import admin.review.AdminReviewDAO;
import admin.review.ReviewBoardVO;
import admin.review.SearchVO;
import java.util.List;
import user.wishlist.WishlistDAO;
import user.wishlist.WishlistVO;
import user.goods.UserGoodsDAO;
import user.main.GoodsSimpleVO;

public final class detail_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  public java.lang.String getServletInfo() {
    return "";
  }

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(10);
    _jspx_imports_classes.add("user.review.UserReviewDAO");
    _jspx_imports_classes.add("user.goods.UserGoodsDAO");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("user.wishlist.WishlistDAO");
    _jspx_imports_classes.add("util.PageController");
    _jspx_imports_classes.add("user.wishlist.WishlistVO");
    _jspx_imports_classes.add("user.main.GoodsSimpleVO");
    _jspx_imports_classes.add("admin.review.ReviewBoardVO");
    _jspx_imports_classes.add("admin.review.AdminReviewDAO");
    _jspx_imports_classes.add("admin.review.SearchVO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

		// goods 
		String code = (String)request.getParameter("goods");
		GoodsSimpleVO currentGoods = null;
		if(code != null){
			currentGoods = UserGoodsDAO.getInstance().selectOneGoods(code);
		}
		
		// pagenation for review 
		int pageScale = 5;
		int currentPage = Integer.parseInt(request.getParameter("page") == null ? "1" : request.getParameter("page"));
		int startNum = pageScale * (currentPage - 1) + 1;
		int endNum = startNum + pageScale - 1;
		
		PageController pageController = PageController.getInstance();
		String params = pageController.createQueryStr(request);
		
		// review
		SearchVO searchVO = new SearchVO("3", request.getParameter("goods"), null, startNum, endNum);
		UserReviewDAO reviewDAO = UserReviewDAO.getInstance();
		List<ReviewBoardVO> reviews = reviewDAO.selectReviewBoard(searchVO);
	    int totalCount = reviewDAO.selectTotalCount(searchVO);

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../assets/jsp/user/lib.jsp", out, false);
      out.write("\n");
      out.write("<!-- golgolz start -->\n");
      out.write("<link href=\"../assets/css/goods/detail.css\" rel=\"stylesheet\" />\n");
      out.write("<link href=\"http://localhost/assets/css/pagenation.css\" rel=\"stylesheet\" />\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("	$(function(){\n");
      out.write("		var orderBaseURL = \"http://localhost/cart/input_process.jsp?code=");
      out.print( currentGoods.getCode() );
      out.write("&quantity=\";\n");
      out.write("		var buyBaseURL = \"http://localhost/order/order_form.jsp?code=");
      out.print( currentGoods.getCode() );
      out.write("&isCart=0&quantity=\";\n");
      out.write("		\n");
      out.write("		setTotalInfo(1);\n");
      out.write("		\n");
      out.write("		$(\"#quantity_up\").click(function(){\n");
      out.write("			var quantity = parseInt($(\"#quantity\").val());\n");
      out.write("			quantity += 1;\n");
      out.write("			setTotalInfo(quantity);\n");
      out.write("		});\n");
      out.write("		\n");
      out.write("		$(\"#quantity_down\").click(function(){\n");
      out.write("			var quantity = parseInt($(\"#quantity\").val());\n");
      out.write("			quantity -= 1;\n");
      out.write("			\n");
      out.write("			if(quantity == 0){\n");
      out.write("				alert(\"최소 주문 수량은 1개 입니다.\");\n");
      out.write("				return;\n");
      out.write("			}\n");
      out.write("			setTotalInfo(quantity);\n");
      out.write("		});\n");
      out.write("		\n");
      out.write("		/* prdDetail, prdReview */\n");
      out.write("		$(\"#info_tab\").click(function(){\n");
      out.write("			$(\"#prdReview\").css(\"display\", \"none\");\n");
      out.write("			$(\"#prdDetail\").css(\"display\", \"block\");\n");
      out.write("			$(\"#tab02\").removeClass(\"tab_open\");\n");
      out.write("			$(\"#tab01\").addClass(\"tab_open\");\n");
      out.write("		});\n");
      out.write("\n");
      out.write("		$(\"#review_tab\").click(function(){\n");
      out.write("			$(\"#prdDetail\").css(\"display\", \"none\");\n");
      out.write("			$(\"#prdReview\").css(\"display\", \"block\");\n");
      out.write("			$(\"#tab01\").removeClass(\"tab_open\");\n");
      out.write("			$(\"#tab02\").addClass(\"tab_open\");\n");
      out.write("		});\n");
      out.write("		\n");
      out.write("		$(\"#sub_cart\").click(function(){\n");
      out.write("			var quantity = $(\"#quantity\").val();\n");
      out.write("			$(\"#sub_cart\").attr(\"href\", function(){\n");
      out.write("				return orderBaseURL + quantity;\n");
      out.write("			});\n");
      out.write("		});\n");
      out.write("		\n");
      out.write("		$(\"#sub_buy\").click(function(){\n");
      out.write("			var quantity = $(\"#quantity\").val();\n");
      out.write("			$(\"#sub_buy\").attr(\"href\", function(){\n");
      out.write("				return buyBaseURL + quantity;\n");
      out.write("			});\n");
      out.write("		});\n");
      out.write("		\n");
      out.write("		$(\".pages\").click(function(event){\n");
      out.write("			event.preventDefault();\n");
      out.write("			var currentPage = parseInt($(this).text());\n");
      out.write("			var startNum = (currentPage - 1) * ");
      out.print( pageScale );
      out.write(" + 1;\n");
      out.write("			var param = {\n");
      out.write("					start: startNum, \n");
      out.write("					end: startNum + ");
      out.print( pageScale );
      out.write(" - 1, \n");
      out.write("					code: \"");
      out.print( code );
      out.write("\"\n");
      out.write("					};\n");
      out.write("			\n");
      out.write("			$.ajax({\n");
      out.write("				url: \"review_json.jsp\",\n");
      out.write("				type: \"GET\",\n");
      out.write("				data: param,\n");
      out.write("				datatype: \"JSON\",\n");
      out.write("				error: function(xhr){\n");
      out.write("					alert(\"error occurred\");\n");
      out.write("				},\n");
      out.write("				success: function(reviewObj){\n");
      out.write("					if(reviewObj.flag){\n");
      out.write("						var $tbody = $(\"#review_content tbody\");\n");
      out.write("						var reviews = reviewObj.review;\n");
      out.write("						var output = \"\";\n");
      out.write("							\n");
      out.write("						$tbody.empty();\n");
      out.write("						$.each(reviews, function(i, review) {\n");
      out.write("							output = \"\";\n");
      out.write("						    output += \"<tr class='xans-record-'>\";\n");
      out.write("						    output += \"<td>\" + (startNum + i) + \"</td>\";\n");
      out.write("						    output += \"<td class='subject left txtBreak'>\";\n");
      out.write("						    output += \"<a href='http://localhost/review/review_detail_user.jsp?reviewId=\" + review.review_id + \"'>\" + review.title + \"</a></td>\"; // </td> 추가\n");
      out.write("						    output += \"<td>\" + review.id + \"</td>\";\n");
      out.write("						    output += \"<td class='txtInfo txt11'>\" + review.input_date + \"</td>\";\n");
      out.write("						    output += \"</tr>\";\n");
      out.write("						    \n");
      out.write("						    $tbody.append(output);\n");
      out.write("						});\n");
      out.write("						\n");
      out.write("						$(\".pages\").children().each(function(){\n");
      out.write("							$(this).removeClass(\"this\");\n");
      out.write("						});\n");
      out.write("						\n");
      out.write("						$(\"#page_\" + currentPage + \" a\").addClass(\"this\");\n");
      out.write("					}\n");
      out.write("				}\n");
      out.write("			});\n");
      out.write("		});\n");
      out.write("\n");
      out.write("		$(\".need_login\").click(function(event){\n");
      out.write("		 	$.ajax({\n");
      out.write("		        url: \"http://localhost/goods/check_login.jsp\",\n");
      out.write("		        type: \"GET\",\n");
      out.write("		        dataType: \"JSON\",\n");
      out.write("		        error: function(xhr){\n");
      out.write("		        	alert(\"로그인 체크 실패\" + xhr.status);\n");
      out.write("		        },\n");
      out.write("		        success: function(response) {\n");
      out.write("		             if (!response.flag) {\n");
      out.write("		     			event.preventDefault();\n");
      out.write("		                //alert('로그인이 필요합니다.22');\n");
      out.write("		                location.href = 'http://localhost/user/login/userLogin.jsp';\n");
      out.write("		            } \n");
      out.write("		        }\n");
      out.write("		    });\n");
      out.write("		});\n");
      out.write("	});\n");
      out.write("	\n");
      out.write("	function setTotalInfo(quantity){\n");
      out.write("		$(\"#quantity\").val(quantity);\n");
      out.write("		var price_text = $(\"#price\").text();\n");
      out.write("		var price = parseInt(price_text.substring(0, price_text.length - 1));\n");
      out.write("		$(\"#total_quantity\").html(\"(\" + quantity + \"개)\");\n");
      out.write("		$(\"#total_price\").text(price * quantity + \"원\");\n");
      out.write("	}\n");
      out.write("</script>\n");
      out.write("<!-- golgolz end -->\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("	\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../assets/jsp/user/header.jsp", out, false);
      out.write("\n");
      out.write("	<div id=\"wrap\">\n");
      out.write("		<div id=\"container\">\n");
      out.write("			<div id=\"contents\">\n");
      out.write("				<div\n");
      out.write("					class=\"xans-element- xans-product xans-product-headcategory path\">\n");
      out.write("					<span>현재 위치</span>\n");
      out.write("					<ol>\n");
      out.write("						<li><a href=\"http://localhost/index.jsp\">홈</a></li>\n");
      out.write("						<li class=\"\"><a\n");
      out.write("							href=\"http://localhost/goods/best.jsp\">BEST</a></li>\n");
      out.write("					</ol>\n");
      out.write("				</div>\n");
      out.write("				<div class=\"xans-element- xans-product xans-product-detail\">\n");
      out.write("					<div class=\"detailArea\">\n");
      out.write("						<div class=\"xans-element- xans-product xans-product-image imgArea\">\n");
      out.write("							<div class=\"keyImg\">\n");
      out.write("								<div class=\"thumbnail\">\n");
      out.write("										<img\n");
      out.write("										src=\"http://localhost/assets/images/goods/");
      out.print( currentGoods.getDefaultImage() );
      out.write("\"\n");
      out.write("										alt=\"");
      out.print( currentGoods.getName() );
      out.write("\" class=\"BigImage\" />\n");
      out.write("								</div>\n");
      out.write("							</div>\n");
      out.write("							<div class=\"cboth\"></div>\n");
      out.write("							<div class=\"color displaynone\"></div>\n");
      out.write("						</div>\n");
      out.write("						<div class=\"tab_cate\">\n");
      out.write("							<div id=\"tab_cate_title\" class=\"up\">옵션선택</div>\n");
      out.write("							<div class=\"infoArea\" style=\"\">\n");
      out.write("								<div class=\"headingArea\">\n");
      out.write("									<div class=\"icon\"></div>\n");
      out.write("									<h2>");
      out.print( currentGoods.getName() );
      out.write("</h2>\n");
      out.write("								</div>\n");
      out.write("								<div\n");
      out.write("									class=\"xans-element- xans-product xans-product-detaildesign\">\n");
      out.write("									<table border=\"3\" summary=\"\">\n");
      out.write("										<caption>기본 정보</caption>\n");
      out.write("										<tbody>\n");
      out.write("											<tr rel=\"상품명\" class=\"xans-record-\">\n");
      out.write("												<th scope=\"row\"><span\n");
      out.write("													style=\"font-size: 16px; color: #555555\">상품명</span></th>\n");
      out.write("												<td><span style=\"font-size: 16px; color: #555555\">");
      out.print( currentGoods.getName() );
      out.write("</span></td>\n");
      out.write("											</tr>\n");
      out.write("											<tr rel=\"판매가\" class=\"xans-record-\">\n");
      out.write("												<th scope=\"row\"><span\n");
      out.write("													style=\"font-size: 11px; color: #333333\">판매가</span></th>\n");
      out.write("												<td><span style=\"font-size: 11px; color: #333333\"><strong\n");
      out.write("														id=\"span_product_price_text\">");
      out.print( currentGoods.getPrice() );
      out.write("원</strong></span></td>\n");
      out.write("											</tr>\n");
      out.write("										</tbody>\n");
      out.write("									</table>\n");
      out.write("								</div>\n");
      out.write("								<div class=\"guideArea\">\n");
      out.write("									<p class=\"info\">(최소주문수량 1개 이상)</p>\n");
      out.write("								</div>\n");
      out.write("\n");
      out.write("								<div id=\"totalProducts\" class=\"\">\n");
      out.write("									<p class=\"ec-base-help txtWarn txt11 displaynone\">수량을 선택해주세요.</p>\n");
      out.write("									<p class=\"ec-base-help txtWarn txt11\">수량을 선택해주세요.</p>\n");
      out.write("									<table border=\"1\" summary=\"\" style=\"border-top: 1px solid #9a9ba0;\">\n");
      out.write("										<caption>상품 목록</caption>\n");
      out.write("										<colgroup>\n");
      out.write("											<col style=\"width: 284px\" />\n");
      out.write("											<col style=\"width: 80px\" />\n");
      out.write("											<col style=\"width: 110px\" />\n");
      out.write("										</colgroup>\n");
      out.write("										<thead>\n");
      out.write("											<tr class=\"displaynone\">\n");
      out.write("												<th scope=\"col\">상품명</th>\n");
      out.write("												<th scope=\"col\">상품수</th>\n");
      out.write("												<th scope=\"col\">가격</th>\n");
      out.write("											</tr>\n");
      out.write("										</thead>\n");
      out.write("										<tbody>\n");
      out.write("											<tr>\n");
      out.write("												<td>");
      out.print( currentGoods.getName() );
      out.write("</td>\n");
      out.write("												<td><span class=\"quantity\">\n");
      out.write("														<input id=\"quantity\" name=\"quantity_name\" style=\"\" value=\"0\" type=\"text\">\n");
      out.write("														<img\n");
      out.write("															src=\"http://localhost/assets/images/goods/btn_count_up.gif\"\n");
      out.write("															class=\"QuantityUp up\" id=\"quantity_up\"/>\n");
      out.write("														<img\n");
      out.write("															src=\"http://localhost/assets/images/goods/btn_count_down.gif\"\n");
      out.write("															class=\"QuantityDown down\" id=\"quantity_down\"/>\n");
      out.write("												</span></td>\n");
      out.write("												<td class=\"right\">\n");
      out.write("													<span id=\"price\" class=\"quantity_price\">");
      out.print( currentGoods.getPrice() );
      out.write("원</span>\n");
      out.write("												</td>\n");
      out.write("											</tr>\n");
      out.write("										</tbody>\n");
      out.write("									</table>\n");
      out.write("								</div>\n");
      out.write("								<div id=\"totalPrice\" class=\"totalPrice\">\n");
      out.write("									<strong>총 상품금액</strong> (수량) : \n");
      out.write("									<span class=\"total\">\n");
      out.write("										<strong>\n");
      out.write("											<em id=\"total_price\">");
      out.print( currentGoods.getPrice() );
      out.write("원</em>\n");
      out.write("										</strong>\n");
      out.write("										<span id=\"total_quantity\">(0개)</span>\n");
      out.write("									</span>\n");
      out.write("								</div>\n");
      out.write("								<div class=\"xans-element- xans-product xans-product-action\">\n");
      out.write("									<div class=\"ec-base-button\">\n");
      out.write("										<a href=\"http://localhost/cart/input_process.jsp?code=");
      out.print( currentGoods.getCode() );
      out.write("&quantity=\" class=\"sub_cart need_login\" id=\"sub_cart\">장바구니</a>\n");
      out.write("										<a href=\"http://localhost/wishlist/wishlist_insert_process.jsp?code=");
      out.print( currentGoods.getCode() );
      out.write("\" class=\"sub_wish need_login\">관심상품</a>\n");
      out.write("										<a href=\"http://localhost/order/order_form.jsp?code=");
      out.print( currentGoods.getCode() );
      out.write("&isCart=0&quantity=\" class=\"first sub_buy need_login\" id=\"sub_buy\">\n");
      out.write("											<span id=\"btnBuy\">구매하기</span>\n");
      out.write("										</a>\n");
      out.write("									</div>\n");
      out.write("								</div>\n");
      out.write("							</div>\n");
      out.write("						</div>\n");
      out.write("						<!-- //tab_cate -->\n");
      out.write("					</div>\n");
      out.write("				</div>\n");
      out.write("				<div class=\"xans-element- xans-product xans-product-additional\">\n");
      out.write("					<ul class=\"cboth title_detail\">\n");
      out.write("						<li class=\"tab_open\" id=\"tab01\">\n");
      out.write("							<a id=\"info_tab\" href=\"#none\">상품상세정보</a>\n");
      out.write("						</li>\n");
      out.write("						<li id=\"tab02\">\n");
      out.write("							<a id=\"review_tab\" href=\"#none\">리뷰</a>\n");
      out.write("						</li>\n");
      out.write("					</ul>\n");
      out.write("					<!-- 상품 상세 이미지 시작-->\n");
      out.write("					<div id=\"prdDetail\" class=\"tab_box01\">\n");
      out.write("						<div class=\"cont\">\n");
      out.write("							<p>\n");
      out.write("								<img\n");
      out.write("									src=\"http://localhost/assets/images/goods/");
      out.print( currentGoods.getDetailImage() );
      out.write("\"\n");
      out.write("									style=\"display: block; vertical-align: top; margin: 0px auto; text-align: center;\"\n");
      out.write("									name=\"APPLE_IPHONE14_1_description.png\" />\n");
      out.write("							</p>\n");
      out.write("						</div>\n");
      out.write("						<!-- //product_relation -->\n");
      out.write("					</div>\n");
      out.write("					<!-- 리뷰 시작 -->\n");
      out.write("					<div id=\"prdReview\" class=\"tab_box02\" style=\"display: none\">\n");
      out.write("						<div class=\"board\">\n");
      out.write("							<div class=\"xans-element- xans-product xans-product-review\">\n");
      out.write("								<div class=\"ec-base-table typeList\">\n");
      out.write("									<table border=\"1\" summary=\"\" class=\"\" id=\"review_content\">\n");
      out.write("										<caption>상품사용후기</caption>\n");
      out.write("										<colgroup>\n");
      out.write("											<col style=\"width: 70px\" />\n");
      out.write("											<col style=\"width: auto\" />\n");
      out.write("											<col style=\"width: 100px\" />\n");
      out.write("											<col style=\"width: 100px\" />\n");
      out.write("										</colgroup>\n");
      out.write("										<thead>\n");
      out.write("											<tr class=\"center\">\n");
      out.write("												<th scope=\"col\">번호</th>\n");
      out.write("												<th scope=\"col\">제목</th>\n");
      out.write("												<th scope=\"col\">작성자</th>\n");
      out.write("												<th scope=\"col\">작성일</th>\n");
      out.write("											</tr>\n");
      out.write("										</thead>\n");
      out.write("										<tbody class=\"center\">\n");
      out.write("											");
 for(ReviewBoardVO review: reviews){ 
      out.write("\n");
      out.write("											<tr class=\"xans-record-\">\n");
      out.write("												<td>");
      out.print( startNum++ );
      out.write("</td>\n");
      out.write("												<td class=\"subject left txtBreak\">\n");
      out.write("													<a href=\"http://localhost/review/review_detail_user.jsp?reviewId=");
      out.print( review.getReviewId() );
      out.write("\">\n");
      out.write("														");
      out.print( review.getTitle() );
      out.write("\n");
      out.write("													</a>\n");
      out.write("												<td>");
      out.print( review.getId() );
      out.write("</td>\n");
      out.write("												<td class=\"txtInfo txt11\">");
      out.print( review.getInputDate() );
      out.write("</td>\n");
      out.write("											</tr>\n");
      out.write("											");
 } 
      out.write("\n");
      out.write("										</tbody>\n");
      out.write("									</table>\n");
      out.write("								</div>\n");
      out.write("							</div>\n");
      out.write("							");

					        	String pageNation = 
					        	pageController.createPagingBtns("http://localhost/goods/detail.jsp", params
					        	        , Integer.parseInt(request.getParameter("page") == null ? "1" : request.getParameter("page")), (totalCount / pageScale) + 1);
					        
      out.write("\n");
      out.write("					        <div id=\"pageNation\" style=\"margin-top: 30px;\">\n");
      out.write("						        ");
      out.print( pageNation );
      out.write("\n");
      out.write("					        </div>\n");
      out.write("						</div>\n");
      out.write("					</div>\n");
      out.write("					\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("		</div>\n");
      out.write("	</div>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
